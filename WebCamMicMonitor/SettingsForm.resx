<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGiAAAAEAIACoDQAAFgAAACgAAAAaAAAAQAAAAAEAIAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAACUAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAxwAAABIAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        ALEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADgAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAsQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAEAAACLAAAA7AAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAA
        APkAAAD/AAAA/wAAAP0AAADtAAAA6gAAAOoAAADqAAAA6gAAAOoAAADsAAAAugAAABIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA8AAAAqAAAAKwAAACsAAAArAAAAKwAAACsAAAAvAAAAwgAAAP8AAAD/AAAA6AAA
        AEYAAAApAAAAKwAAACsAAAArAAAAKwAAACsAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABMAAAC+AAAA/wAAAP8AAADmAAAALAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAA
        AFcAAACdAAAAzQAAAPUAAAD/AAAA/wAAAPsAAADRAAAAnQAAAFcAAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAGQAAADMAAAA+gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+gAAAMwAAABkAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACUAAACqAAAA+QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPkAAACqAAAAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvAAAAyAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADIAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAMYAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAADsAAAAygAAALMAAACzAAAAygAAAOwAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADGAAAAIgAA
        AAAAAAAAAAAAAAAAAAkAAACiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADiAAAAgwAAADEAAAAMAAAAAQAA
        AAEAAAAMAAAAMQAAAIMAAADiAAAA/wAAAP8AAAD/AAAA/wAAAP8AAACiAAAACQAAAAAAAAAAAAAAVwAA
        APYAAAD/AAAA/wAAAP8AAAD/AAAAvgAAADMAAAAAAAAAEQAAAEMAAABlAAAAZQAAAEMAAAARAAAAAAAA
        ADMAAAC+AAAA/wAAAP8AAAD/AAAA/wAAAPYAAABXAAAAAAAAABEAAAC9AAAA/wAAAP8AAAD/AAAA/wAA
        AMEAAAAgAAAABAAAAFwAAAC6AAAAswAAAJUAAACVAAAAswAAALoAAABcAAAABAAAACAAAADBAAAA/wAA
        AP8AAAD/AAAA/wAAAL0AAAARAAAATwAAAPMAAAD/AAAA/wAAAP8AAADnAAAAOgAAAAIAAAB8AAAAvQAA
        AE4AAAA5AAAAWQAAAFkAAAA5AAAATgAAAL0AAAB8AAAAAwAAADkAAADmAAAA/wAAAP8AAAD/AAAA8wAA
        AE8AAACaAAAA/wAAAP8AAAD/AAAA/wAAAJAAAAAAAAAAVQAAAL4AAAA0AAAAggAAAOcAAAD+AAAA/gAA
        AOgAAACCAAAANAAAAL4AAABVAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAAmgAAANEAAAD/AAAA/wAA
        AP8AAADzAAAAPwAAAAoAAACzAAAAVgAAAH0AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAB+AAAAVQAA
        ALMAAAAKAAAAPwAAAPMAAAD/AAAA/wAAAP8AAADRAAAA8AAAAP8AAAD/AAAA/wAAANkAAAAWAAAANAAA
        ALgAAAA4AAAA3wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAN8AAAA4AAAAuAAAADQAAAAWAAAA2QAA
        AP8AAAD/AAAA/wAAAPAAAAD9AAAA/wAAAP8AAAD/AAAAxwAAAAgAAABSAAAAowAAAE0AAAD5AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAAAE0AAACiAAAAUgAAAAgAAADGAAAA/wAAAP8AAAD/AAAA/QAA
        APwAAAD/AAAA/wAAAP8AAADIAAAACQAAAFAAAACkAAAASwAAAPgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD4AAAASwAAAKQAAABQAAAACQAAAMgAAAD/AAAA/wAAAP8AAAD8AAAA7QAAAP8AAAD/AAAA/wAA
        ANwAAAAaAAAALwAAALoAAAA3AAAA2AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANgAAAA3AAAAugAA
        AC8AAAAaAAAA3AAAAP8AAAD/AAAA/wAAAO0AAADMAAAA/wAAAP8AAAD/AAAA9gAAAEcAAAAGAAAArAAA
        AGEAAABsAAAA+AAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAbQAAAGEAAACtAAAABgAAAEcAAAD2AAAA/wAA
        AP8AAAD/AAAAzAAAAJIAAAD/AAAA/wAAAP8AAAD/AAAAnAAAAAEAAABHAAAAxAAAAD4AAABqAAAA1gAA
        APYAAAD2AAAA1wAAAGoAAAA+AAAAxAAAAEcAAAABAAAAnAAAAP8AAAD/AAAA/wAAAP8AAACSAAAARgAA
        AO8AAAD/AAAA/wAAAP8AAADuAAAASAAAAAAAAABnAAAAxAAAAGMAAAA1AAAARgAAAEYAAAA1AAAAYwAA
        AMQAAABnAAAAAAAAAEcAAADuAAAA/wAAAP8AAAD/AAAA7wAAAEYAAAAMAAAAsgAAAP8AAAD/AAAA/wAA
        AP8AAADQAAAALwAAAAEAAABFAAAArAAAAL0AAACpAAAAqQAAAL0AAACsAAAARQAAAAEAAAAuAAAAzwAA
        AP8AAAD/AAAA/wAAAP8AAACyAAAADAAAAAAAAABKAAAA8QAAAP8AAAD/AAAA/wAAAP8AAADQAAAARwAA
        AAMAAAAHAAAALAAAAEsAAABLAAAALAAAAAcAAAADAAAARwAAANAAAAD/AAAA/wAAAP8AAAD/AAAA8QAA
        AEoAAAAAAAAAAAAAAAUAAACRAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADuAAAAnQAAAEgAAAAbAAAACwAA
        AAsAAAAbAAAASAAAAJ0AAADuAAAA/wAAAP8AAAD/AAAA/wAAAP8AAACRAAAABQAAAAAAAAAAAAAAAAAA
        ABgAAAC1AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9gAAAN4AAADLAAAAywAAAN4AAAD2AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAtQAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAC2AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        ALYAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACSAAAA8gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAACSAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAABLAAAAtQAAAPEAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPEAAAC1AAAASwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAANAAAASAAAAJUAAADPAAAA7wAAAP0AAAD9AAAA7wAAAM8AAACVAAAASAAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAwMAAAMDAAADAwAAAwOAAAcD/gP/A/gAfwPgA
        B8DwAAPA4AABwMAAAMCAAABAgECAQAAAAAAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABACAAAAAAAIAAAECAAABAwAAAwOAAAcDwAAPA+AAHwP4AH8A=
</value>
  </data>
</root>